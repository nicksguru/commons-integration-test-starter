package guru.nicks.test;

import lombok.extern.slf4j.Slf4j;
import org.springframework.boot.test.util.TestPropertyValues;
import org.springframework.context.ApplicationContextInitializer;
import org.springframework.context.support.GenericApplicationContext;
import org.testcontainers.containers.MongoDBContainer;

/**
 * Runs MySQL (version {@value #MONGO_IMAGE}) via TestContainers and sets Spring datasource properties accordingly: URL,
 * driver name etc. (DB name and credentials are generated by the container). Stops container bean when Spring context
 * gets closed.
 */
@Slf4j
public class MongoContainerRunner implements ApplicationContextInitializer<GenericApplicationContext> {

    public static final String MONGO_IMAGE = "mongo:7.0.15";

    @Override
    public void initialize(GenericApplicationContext applicationContext) {
        MongoDBContainer container = createAndStartContainer(applicationContext);

        // the only reason to register bean is to stop DB container when app context is closed
        applicationContext.registerBean(MongoDBContainer.class,
                () -> container,
                beanDefinition -> beanDefinition.setDestroyMethodName("stop"));
    }

    private MongoDBContainer createAndStartContainer(GenericApplicationContext applicationContext) {
        var container = new MongoDBContainer(MONGO_IMAGE);
        container.start();

        TestPropertyValues testProps = TestPropertyValues.of(
                "spring.test.database.replace=none",
                // without this, index annotations aren't applied, see
                // https://docs.spring.io/spring-data/mongodb/docs/current/reference/html/#new-features.3.0
                "spring.data.mongodb.auto-index-creation=true",
                "spring.data.mongodb.uri=" + container.getReplicaSetUrl());

        log.debug("Assigning application properties for running tests: {}", testProps);
        testProps.applyTo(applicationContext);

        return container;
    }

}
